name: Elixir CI

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - main
      - develop

env:
  MIX_ENV: test
  DATABASE_URL: postgres://postgres:postgres@localhost/chat_app_repo

jobs:
  check-lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        otp: [24]
        elixir: [1.13]
    services:
      postgres:
        image: postgres:12.4-alpine
        ports: [ "5432:5432" ]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: chat_app_repo
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Setup elixir
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}
          experimental-otp: true
      - name: Retrieve Mix Dependencies Cache
        uses: actions/cache@v1
        id: mix-cache # id to use in retrieve action
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Install Mix Dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get

      - name: Checking compile warnings
        run: mix compile --warnings-as-errors --force
      - name: Check formatting
        run: mix format --check-formatted
      - name: Run Tests
        run: mix test
      - name: Rollback
        run: mix ecto.rollback --step 10 --quiet
#      - name: Run Credo
#        run: mix credo --strict
